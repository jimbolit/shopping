<head>
        <link rel="stylesheet" href="/stylesheets/styles_checkout.css">
	</head>      
      
      <div class="container-fluid breadcrumbBox text-center">
			<ol class="breadcrumb d-flex justify-content-center">
				<li><a href='/basket'>Review</a></li>
				<li class="active"><a href='/delivery-details'>Delivery Details</a></li>
				<li><a>Payment</a></li>
			</ol>
		</div>


    <div class="container">
      <div class="row">
        <div class="col-md-4 order-md-2 mb-4">
          <h4 class="d-flex justify-content-between align-items-center mb-3">
            <span class="text-muted">Your cart</span>
          </h4>
          <ul class="list-group mb-3">
                <% for products in @basket_products %>
                <% quantity = @basket.find{|y| y["product_id"] == products[:id]}.to_h["order_quantity"]%>


            <li class="list-group-item d-flex justify-content-between lh-condensed">
              <div>
                <h6 class="mr-5 my-0"><%=products[:name]%></h6>
              </div>
              <span class="ml-5 text-muted">$<%= "%.2f" %  (products[:price] * quantity) %></span>
            </li>
                <%end%>
          
            <li class="list-group-item d-flex justify-content-between bg-light">
              <div class="text-success">
                <h6 class="my-0">Promo code</h6>
                <small></small>
              </div>
              <span class="text-success">$0</span>
            </li>
            <li class="list-group-item d-flex justify-content-between">
              <span>Total</span>
              <strong>$<%="%.2f" % @sub_total%></strong>
            </li>
          </ul>
          <form class="card p-2">
            <div class="input-group">
              <input type="text" class="form-control" placeholder="Promo code">
              <div class="input-group-append">
                <button type="submit" class="btn btn-secondary">Redeem</button>
              </div>
            </div>
          </form>
        </div>
        <div class="col-md-8 order-md-1">
          <h4 class="mb-3">Shipping details</h4>
          
          <form class="needs-validation" action="/orders" method="post" novalidate>
            <input type="hidden" name="authenticity_token" value = <%= form_authenticity_token %> >
            <input type="hidden" name="order[user_id]" value = nil >
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="firstName">First name</label>
                <input type="text" class="form-control" name="order[first_name]" id="firstName" placeholder="" value="" required>
                <div class="invalid-feedback">
                  Valid first name is required.
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <label for="lastName">Last name</label>
                <input type="text" class="form-control" id="lastName" name="order[last_name]" placeholder="" value="" required>
                <div class="invalid-feedback">
                  Valid last name is required.
                </div>
              </div>
            </div>
            <div class="mb-3">
              <label for="email">Email </label>
              <input type="email" class="form-control" name="order[email]" id="email" placeholder="you@example.com" required>
              <div class="invalid-feedback">
                Please enter a valid email address for shipping updates.
              </div>
            </div>
            <div class="mb-3">
              <label for="email">Phone number </label>
              <input type="number" class="form-control" name="order[phone_number]" id="number" placeholder="0210123456" required>
              <div class="invalid-feedback">
                Please enter a valid phone number.
              </div>
            </div>
            <div class="mb-3">
              <label for="address">Address</label>
              <input type="text" name="order[address]" class="form-control" id="autocomplete" placeholder="1234 Main St" onFocus="geolocate" required>
              <div class="invalid-feedback">
                Please enter your shipping address.
              </div>
            </div>
            <hr class="mb-4">
            <div class="order">
                <button class="text-center btn-lg btn-block" type="submit" id="checkout-button"> Continue to payment </button> 
            </div>
           </form>
        </div>
      </div>
 
      <footer class="my-5 pt-5 text-muted text-center text-small">
        <p class="mb-1">&copy; Shopalong</p>
        <ul class="list-inline">
          <li class="list-inline-item"><a href="#">Privacy</a></li>
          <li class="list-inline-item"><a href="#">Terms</a></li>
          <li class="list-inline-item"><a href="#">Support</a></li>
        </ul>
      </footer>
    </div>
    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
   
    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery-slim.min.js"><\/script>')</script>
    <script src="../../assets/js/vendor/popper.min.js"></script>
    <script src="../../dist/js/bootstrap.min.js"></script>
    <script src="../../assets/js/vendor/holder.min.js"></script>
    <script>
      // Example starter JavaScript for disabling form submissions if there are invalid fields
      (function() {
        'use strict';
        window.addEventListener('load', function() {
          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          var forms = document.getElementsByClassName('needs-validation');
          // Loop over them and prevent submission
          var validation = Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('submit', function(event) {
              if (form.checkValidity() === false) {
                event.preventDefault();
                event.stopPropagation();
              }
              form.classList.add('was-validated');
            }, false);
          });
        }, false);
      })();
    </script>

 <!-- start of maps javascript -->
    <script>
    // Set out variables
    var placeSearch, autocomplete;
    function initAutocomplete() {
    // Create the autocomplete object, it's value is set based off input from the form, and restrict the search predictions to geographical location types.
    autocomplete = new google.maps.places.Autocomplete(
        document.getElementById('autocomplete'), {types: ['geocode']});
    // Avoid paying for data that I don't need 
    autocomplete.setFields(['address_component']);
    // When the user selects an address from the drop-down, populate the
    // address fields in the form.
    autocomplete.addListener('place_changed', fillInAddress);
    }
    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
        };
        var circle = new google.maps.Circle(
            {center: geolocation, radius: position.coords.accuracy});
        autocomplete.setBounds(circle.getBounds());
        });
    }
    }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=<%=ENV["google_maps_api_key"]%>&libraries=places&callback=initAutocomplete"
            async defer></script>

    <!-- end of javascript -->


    
    </body>